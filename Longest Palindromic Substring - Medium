class Solution {
  public:
    string longestPalindrome (string s) {
      int n = s.size();
      string ans;
      
      if (n <= 1)
        return s;
      
      for (int i = 0; i < n-1; i++) {
        string ans1, ans2;
        
        ans1 = checkOdd(s, i, i);
        ans2 = checkEven(s, i, i+1);
        
        if (ans1.size() > ans2.size() && ans1.size() > ans.size())
          ans = ans1;
        else if (ans2.size() > ans1.size() && ans2.size() > ans.size())
          ans = ans2;
      }
      
      return ans;
  }

  public:
    string checkOdd (string s, int left, int right) {
      int size = 1, n = s.size();
      int start = left;
      left--;
      right++;
      
      while (left >= 0 && right <= n-1 && s[left] == s[right]) {
        start = left;
        size += 2;
        left--;
        right++;
      }
      
      return s.substr(start, size);
  }
  
  public:
    string checkEven (string s, int left, int right) {
      int size = 0, n = s.size();
      int start = -1;
      
      while (left >= 0 && right <= n-1 && s[left] == s[right]) {
        start = left;
        size += 2;
        left--;
        right++;
      }
      
      if (start == -1)
        return "";
      else
        return s.substr(start, size);
  }
};
