/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> preorder(Node* root) {
	//output vector
        vector<int> ans;
		//Null check
        if(!root)
            return ans;
		//Call main function
        preTraversal(root,ans);
        return ans;
    }
    void preTraversal(Node* root , vector<int> &ans) {
	// Base case 
        if (!root) {
            return;
        }
		//Push root value and iterate its children left to right(start to end of vector)
        ans.push_back(root->val); 
        int n = root->children.size();
        for(int i=0;i<n;i++) {
            preTraversal(root->children[i],ans);
        }
    }
};
